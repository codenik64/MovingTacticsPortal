@model MovingTactics.Portal.Models.SurveyModule.SurveyOptions
@using MovingTactics.Portal.Customs.Helpers


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Survey Options</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="control-label col-md-2"> Option Type</div>
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.OptionType, RST_MovingTactics_DropdownBuilder.GetSurveyOptionTypes(), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OptionType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> For Survey</div>
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.SurveyId, RST_MovingTactics_DropdownBuilder.GetSurveys(), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SurveyId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-primary" />
            </div>
        </div>
    </div>
}

